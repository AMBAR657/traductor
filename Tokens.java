/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Enum.java to edit this template
 */
package codigo;

import codigo.*;

/**
 *
 * @author Administrador
 */
public enum Tokens {
    /*Adjetivos*/
    Linea,
    Comillas,
    Apostrofe,
    xogi,
    MPANTI("mpant´i"),
    ngüni,
    NÑADI("nñ’ädi"),
    chala,
    motsi,
    HÑEI("hñe’i"),
    me,
    TSOYO("ts’oyo"),
    mpidi,
    ÑAFADI("ñ’äfädi"),
    ma,
    BEMFENI("b’émfeni"),
    dä,
    inxa_hño,
    BUÑA("büñ’a"),
    bazu,
    hñu,
    ÑI("ñ´í"),
    TSANTI("tsant´i"),
    ntudi,
    ndängi,
    ñöhö,
    dämä,
    BETSA("b´ëtsa"),
    RAME("r´ame"),
    ngähä,
    mathoni,
    ho,
    ehya,
    HÑETSI("hñets´i"),
    käi,
    bätsixi,
    doda,
    nazi,
    TSOMUI("ts´omüi"),
    dathi,
    DAMANTSO("dämänts´o"),
    nöxke,
    NTSEDI("nts´ëdi"),
    BIFO("b´ifo"),
    hyoya,
    bämhñä,
    DOYE("do´yë"),
    hante,
    zusëhë,
    HATI("hat´i"),
    ñiña,
    NAMBU("n´ambü"),
    RANDAME("r´andamë"),
    gogu,
    dondo,
    BATI("b´ati"),
    zotho,
    xahño,
    hini,
    TAXIA("t´axia"),
    NGUENTSETI("nguentset´i"),
    xi,
    ÑOKE("ñ´öke"),
    nxini,
    NTSUTI("nts´üt´i"),
    TSIZOTHO("ts´izotho"),
    hoga,
    dängi,
    däta,
    BASJAI("bäsjä´i"),
    metsi,
    noho,
    notsi,
    TU("t´ü"),
    TUKI("t´üki"),
    tsani,
    BENTE("b´ënte"),
    mëfi,
    bepäte,
    bete,
    DAKEI("däk´ei"),
    /*Animales*/
    NANDO("nöndo"),
    DETI("dëti"),
    BOFRI("b’ofri"),
    NDANI("ndäni"),
    TAXI("t’äxi"),
    MEYO("mey’o"),
    TSUDI("ts’üdi"),
    DAMONI("däm’öni"),
    TANI("tan’i"),
    TSUDI2("ts’üdi"),
    TSUDI3("ts’üdi"),
    NDMFRI("ndämfri"),
    MAXOMBONI("mäxo_mbon’i"),
    BONDRI("b’ondri"),
    UAXO("uaxo"),
    NXUBRU("nxubru"),
    DOFRI("dofri"),
    DAFRI("däfri"),
    TÜJUA("t’üjua"),
    DOJUA("dojua"),
    BONI("b’oni"),
    NGUÑO("nguñ’o"),
    SUMBONI("sumbon’i"),
    FAGI("fagi"),
    UAFRI("uafri"),
    NE("ne"),
    MEYA("meya"),
    ÑOGUI("ñogui"),
    DENTI("dent’i"),
    DAMONI2("däm’öni"),
    BOYO("b’oy’o"),
    NOGO("nogo"),
    TABTSUDI("tabts’üdi"),
    TAXO("taxo"),
    SEFI("sefi"),
    BOI("boi"),
    HYOTE("hyote"),
    NANDO2("nöndo"),
    FANI("fani"),
    TAXI2("t’äxi"),
    ZIYO("zi’yo"),
    JUA("jua"),
    DÜRRÜ("dürrü"),
    BADUÑU("baduñ’u"),
    BEXHNI("b’ëxhni"),
    XIDE("xide"),
    DETI2("dëti"),
    TSATYOO("tsaty’o"),
    DORO("doro"),
    BAGA("baga"),
    MEYO2("me’y’o"),
    /*Bebidas*/
    BANXI("b’anxi"),
    BABGA("b’abga"),
    BANFANI("b’anfani"),
    SEI("sei"),
    UTHE("uthe"),
    XATHE("xathe"),
    TSËTHE("tsëthe"),
    NDÄTHE("ndäthe"),
    TASDEHE("t’asdehe"),
    TAFI("t’afi"),
    HETADEHE("he’tadehe"),
    TEI_MBOTI("t’ei_mb’oti"),
    XESKO("xesko"),
    TSINDEHE("tsindehe"),
    XITI("xiti"),
    XITI2("xiti"),
    FÜNBA("fünb’a"),
    FÜSEI("füsei"),
    GIXI("gixi"),
    DEXBA("dexb’a"),
    BABXA("b’abxa"),
    GIÑAFI("giñ’afi"),
    FÜTI("füti"),
    ÑOGI("ñogi"),
    ÑOGI2("ñogi"),
    NTIKI("ntiki"),
    XESKO2("xesko"),
    NTAI("nt’ai"),
    NTAI2("nt’ai"),
    AI("ai"),
    THÖSDEHE("thösdehe"),
    TSI("tsi"),
    TSITHE("tsithe"),
    TSISEI("tsisei"),
    NÖGE("nöge"),
    DEHE("dehe"),
    HETADEHE2("he’tadehe"),
    TSITHE2("tsithe"),
    BOTHE("b’othe"),
    DËJÜ("dëjü"),
    BA("b’a"),
    BINU("binu"),
    BINUBXI("binubxi"),
    GIÑAFI2("giñ’afi"),
    /*Hogar*/
    BËNI("b’ëni"),
    PATHE("pathe"),
    TSËTHE2("tsëthe"),
    XIFI("xifi"),
    NTHUHÑÄ("nthuhñä"),
    TENI("t’eni"),
    NSAHA("nsaha"),
    BEZA("b’eza"),
    XITO("xito"),
    BËNI2("b’ëni"),
    NGU("ngu"),
    NTEÑÄ("nt’eñä"),
    TESTATSI("t’est’ats’i"),
    YO("yo"),
    XITËI("xit’ëi"),
    NESPI("nespi"),
    DÄXO("däxo"),
    NTHUHÑÄ2("nthuhñä"),
    FIDI("fidi"),
    PËMBO("pëmbo"),
    MPËMBO("mpëmbo"),
    MBO("mbo"),
    EDE("ede"),
    HÑE("hñe"),
    XIBO("xibo"),
    FEGE("fege"),
    XA("xa"),
    FÖTE("föt’e"),
    XABO("xabo"),
    UÄDRI("uädri"),
    BADA("b’ada"),
    NTENI("nt’eni"),
    NSOKI("nsoki"),
    HYATSI("hyats’i"),
    BATSI("b’ats’i"),
    BE("b’e"),
    ÑETHI("ñ’ethi"),
    MEXA("mexa"),
    YEXTHO("yextho"),
    JÄDO("jädo"),
    BAXKAHAI("b’axkahai"),
    NSANI("nsani"),
    FONTHAI("fonthai"),
    GOSTHI("gosthi"),
    BAHA("b’aha"),
    NJUATI("njuat’i"),
    NTÖXGU("nt’öxgu"),
    DOHAI("dohai"),
    PAXI("paxi"),
    NJOTI("njot’i"),
    FOXYO("foxyo"),
    DÄXHNI("däxhni"),
    NGUMATHA("ngum’atha"),
    NGUPAXI("ngupaxi"),
    DONGU("dongu"),
    NTO("nt’o"),
    BAFI("b’afi"),
    NGUNI("nguni"),
    NXASKI("nxaski"),
    NTEXA("nt’exa"),
    BAI("b’ai"),
    NTÄXI("nt’äxi"),
    ÄHÄ("ähä"),
    ÑUNDRI("ñ’undri"),
    NSAHA2("nsaha"),
    FÖTE2("föt’e"),
    ÄHÄ2("ähä"),
    /*Celebridades*/
    NGOMBAXJUA("ngombaxjua"),
    DÄNGO("dängo"),
    BAXJUÄ("baxjuä"),
    BEHE("behe"),
    MPADU("mpadu"),
    HOGAXJÄ("hogaxjä"),
    XISTEHE("xistehe"),
    NTHÄTI("nthäti"),
    ZÄNIGO("zänigo"),
    ZÄNIGO2("zänigo"),
    HOGAXJÄ2("hogaxjä"),
    BEHE2("behe"),
    BAXJUÄ2("baxjuä"),
    DÄNGO2("dängo"),
    MPADU2("mpadu"),
    XISTEHE2("xistehe"),
    NTHÄTI2("nthäti"),
    NGOMBAXJUA2("ngombaxjua"),
    /*Colores*/
    NANXA("nanxa"),
    BO("b’o"),
    DEJÜ("dëjü"),
    THËNI("thëni"),
    IXTHËNI("ixthëni"),
    OXA("oxa"),
    MAHYATSI("mahyats’i"),
    KÜHÜ("kühü"),
    KASTI("k’ast’i"),
    MOKANGI("mok’angi"),
    TA_XI("t’axi"),
    KÜHÜ2("kühü"),
    BOSPI("b’ospi"),
    NANXA2("nanxa"),
    THËNI2("thëni"),
    NOXADÖNI("noxadöni"),
    KANGI("k’angi"),
    /* Comidas */
    AXI("axi"),
    DËTI("dëti"),
    DOKU("dok’u"),
    TEI("t’ei"),
    DOTHFI("dothfi"),
    THUMNGÖ("thumngö"),
    BANTYÜGA("b’ant’yüga"),
    DEXDEHE("dexdehe"),
    NGÖ("ngö"),
    DËNXI("dënxi"),
    NTOXI("nt’oxi"),
    TSÜDI("ts’üdi"),
    XAMU("xamu"),
    TSAPO("ts’apo"),
    FONGUÑI("fonguñ’i"),
    KAMAÑI("k’amañi"),
    DÄ("dä"),
    NZIMXUDI("nzimxudi"),
    ÑU("ñu"),
    XIDJÜ("xidjü"),
    JÜ("jü"),
    NTSÄNI("ntsäni"),
    JÜNFÖ("jünfö"),
    DÄJÜ("däjü"),
    XIDI("xidi"),
    XIDITHÄ("xidithä"),
    TSË("tsë"),
    DONI("don’i"),
    XIDJÜ2("xidjü"),
    NGI("ngi"),
    NDËGA("ndëga"),
    TAFI2("t’afi"),
    GITHE("githe"),
    DËMZA("dëmza"),
    THUHME("thuhme"),
    FETHME("fethme"),
    JUITUA("juit’ua"),
    GËXO("gëxo"),
    TSANTSI("ts’ants’i"),
    THÄNTI("thänt’i"),
    DAKATE("dakate"),
    THEDI("thedi"),
    THENGÖ("thengö"),
    UGI("ugi"),
    HME("hme"),
    DUTI("dut’i"),
    EFE("efe"),
    NDA("nda"),
    MBIP("mbipi"),
    ÑUXI("ñuxi"),
    ÑIXI("ñ’ixi"),
    NGÜDI("ngüdi"),
    TËGI("t’ëgi"),
    JÜHMAI("jühmai"),
    DEXJÜ("dexjü"),
    DEXFO("dexfo"),
    BÖKUA("bö’kua"),
    XIMDONI("ximdon’i"),
    TËI("t’ëi"),
    TSUTI("tsut’i"),
    JAMI("jam’i"),
    MPEMI("mpemi"),
    TSIMDONI("tsimdon’i"),
    TSIJA("tsija"),
    HÑUNI("hñuni"),
    ËGI("ëgi"),
    YÜHI("yühi"),
    FÜNGO("füngo"),
    TSAPO2("ts’apo"),
    MÄDO("mädo"),
    BATMADO("b’atmado"),
    NÖXKE("nöxke"),
    ÑÄFI("ñäfi"),
    PIJHME("pijhme"),
    HANGI("hangi"),
    HAHME("hahme"),
    HAXHME("haxhme"),
    PIJHME2("pijhme"),
    FETHME2("fethme"),
    NZATHU("nzathu"),
    U("u"),
    /*Expresiones*/
    MA,
    HU,
    TUT,
    MAGÖ("magö"),
    GEPÜ("gepü"),
    RAKIGI("r’akigi"),
    ÖPI("öpi"),
    MÖKJÄ("mö’kjä"),
    KINDE("kinde"),
    HATSI("hats’i"),
    HAXAJUÄ("haxajuä"),
    NGÄRI("ngäri"),
    JAMÄDI("jamädi"),
    HATSI_THOPÜ("hats’i thopü"),
    HATSI2("hats’i"),
    DÄMÜI("dämüi"),
    NEHE("nehe"),
    BATÄ("b’atä"),
    Ä("ä"),
    HAGE("¡hage!"),
    HADIHINA("¿hadihina?"),
    ÑÄHÄ("ñähä"),
    JA("ja"),
    HUEKATE("¡huekate!"),
    KATE("¡kate!"),
    BÄSËÄJUÄ("¿bäsë’äjuä?"),
    MAJUÄNI("majuäni"),
    HUEKATE2("¡huekate!"),
    THÄNTAÑI("thänt’añi"),
    /*Gif*/
    HYADI("hyadi"),
    ZÄNÄ("zänä"),
    DO("do"),
    MAHETSI("mahets’i"),
    HATSI0("hats’i"),
    DÖNI("döni"),
    YOBE("y’ob’e"),
    MPÄDI("mpädi"),
    DEHE0("dehe"),
    TÜMÜ("tümü"),
    NGU0("ngu"),
    NDÖMI("ndöm’i"),
    MI,
    NOMBRE,
    ES,
    DAME,
    DAME_UNA,
    DAME_UN,
    TORTILLA,
    FRIJOL,
    POR,
    FAVOR,
    BUENOS,
    DIAS,
    PERMISO,
    CON,
    POCO_DE,
    naxtui,
    POCO,
    /*Frases*/
    /* Frases en lexer.flex */
    GA_HO_RA_HMUNTSSI("ga ho ra hmunts'i"),
    THOGI_GI_ZI_TSAYA("thogi gi zi tsaya"),
    HAXA_JUA("haxa juä"),
    KI_HATS_I("ki hats'i"),
    KI_DEE_TEXKI_DEE("ki dee, texki dee"),
    HAXKAHU("háxkahu̠"),
    MA_TUHU("ma tuhu…"),
    NDUNTHI_DI_JAMADI("ndunthi di jämadi"),
    NZAKI("nzaki"),
    NDUNTHI_DI_JAMADI_PO_RA_TSOMI("ndunthi di jämadi po rá tso̠ni"),
    KO_RI_ZI_NSEKI_YA_DA_ZI_MA("ko ri zi nseki, ya dá zi ma"),
    MANT_A_GI_PENGI("mänt'ä gi pengi"),
    GA_KATHU_HOGA_NU("ga k'athu, hoga 'ñu"),
    GA_NZENGUAHU("ga nzenguahu̠"),

  /*Frases*/
    NAKINAJMI("N´aki n´a jmi"),
    NAKIXIXUNAXTUITSUNJU("N´aki xixu naxtui tsunju"),
    NAKIXIXUTSUNJU("N´aki xixu tsunju"),
    KJARAÑAKJÄ("kjara ñakjä"),
    NAKINTIDI("N´aki ntidi"),
    THOPUNTIDI("Thopu ntidi"),
    NAKI,
    NAKINA,
    NAKIXIXU,
    jmi,
    tsunju,
    kjara,
    ñakjä,
    haxa,
    juä,
    ntidi,
    thopu,
    
    ERROR;

   public String lexeme; /* Aquí se declara una variable de instancia llamada lexeme,
                           que se utiliza para almacenar el lexema asociado con un token.*/

    Tokens() {
        this.lexeme = "";
    }
/* Este es el constructor predeterminado de la enumeración. Cuando se crea una instancia de
   Tokens sin proporcionar un lexema, se inicializa lexeme como una cadena vacía.*/
    Tokens(String lexeme) {
        this.lexeme = lexeme;
    } 
/*Este es otro constructor que toma un lexema como argumento y lo asigna a la variable de instancia lexeme.*/

    public String getLexeme() {
        return lexeme.isEmpty() ? name().toLowerCase() : lexeme;
    }
}
/*Este es un método que proporciona acceso al lexema asociado con un token. Si el lexema está vacío, devuelve el nombre 
del token en minúsculas utilizando name().toLowerCase(). Si el lexema no está vacío, devuelve el lexema almacenado.*/